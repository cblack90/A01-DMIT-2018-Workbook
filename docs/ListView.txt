ListView Dive
-good for full CRUD processes
-have navigation properties - Address.City - doesn't work
-public virtual is lazy loading - wont try and bring in all the related data for the related entity
	-only bring back the property that is mapped
-what if we do want include Address info - ....Suppliers.Include("Address").ToList(); 
	-works, but not the best solution
	-better solution - ... Suppliers.Include(nameof(Supplier.Address)).ToList();
**Package Manager
PM> update-package -r

Instead of an ItemTemplate we could us an InsertItemTemplate
Ensure you add to ListView -> InserItemPostion="FirstItem/LastItem"-> default is to not display it
In ListView can us CommanName property - Insert - Update - Delete - Clear 

<%# Item.... %> - One way data bind
TextBoxes -> <%# BindItem.Phone %> - Two way data bind  
Any time we are editing, reference BindItem

DropDownList -> for Address - BindItem.AddressID so that it is appropriately connected to the Supplier Class

partial keyword for class -> tells compiler we could place other members of this class in another physical file
create a separate folder that allows us to add. If we edit the auto generated one, if we have to regenerate, we lose the work